version: '3.8'
services:
  sora-nginx:
    container_name: sora-nginx
    build:
      context: ./
      dockerfile: dockerfile.nginx
    ports:
      - "8080:80"
    restart: always
    volumes:
      - ./www:/var/www/
      - ./storage:/var/storage/
      - ./logs/nginx:/var/log/nginx:delegated
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - sora-network

  sora-fpm:
    container_name: sora-fpm
    build:
      context: ./
      dockerfile: dockerfile.fpm
    ports:
      - "9000:9000"
    restart: always
    working_dir: /var/www
    volumes:
      - ./www:/var/www/:rw
      - ./storage:/var/storage/
      - ./logs/php-fpm:/var/log:delegated
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      PHP_IDE_CONFIG: "serverName=Docker"
      FORCE_SSL: "false"
      XDEBUG_CONFIG: "client_host=172.17.0.1"
      APP_ENV: dev # environment
      #XDEBUG_CONFIG: "remote_host=host.docker.sora-network remote_enable=1"
      #APP_ENV: ${APP_ENV}
    networks:
      - sora-network

  sora-mysql:
    container_name: sora-mysql
    image: mysql:5.7.37
    restart: always
    tty: true
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: sora
      MYSQL_USER: admin
      MYSQL_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - ./mysql:/var/lib/mysql
      - ./docker/mysql/conf:/etc/mysql/conf.d
    networks:
      - sora-network

  sora-redis:
    container_name: sora-redis
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: always
    networks:
      - sora-network

  sora-nodejs:
    container_name: sora-nodejs
    build:
      context: .
      dockerfile: dockerfile.nodejs
    restart: always
    working_dir: /var/www/frontend
    volumes:
      - ./www:/var/www/
      - ./www/frontend:/var/www/frontend:rw,delegated
    environment:
      WEB_HOST: sora-nginx
      WEB_PORT: 80
    ports:
      - "3000:3000"
      - "3001:3001"
    networks:
      - sora-network

#  sora-apollo:
#    container_name: sora-apollo
#    image: sora-nodejs
#    working_dir: /apollo
#    volumes:
#      - ./apollo:/apollo
#    ports:
#      - "4000:4000"
#    command: [ "npm", "start" ]
#    networks:
#      - sora-network

  sora-opensearch:
    container_name: sora-opensearch
#    image: opensearchproject/opensearch:2.3.0
    image: elasticsearch:8.15.1
    environment:
        - discovery.type=single-node
        - bootstrap.memory_lock=true
        - xpack.security.enabled=false
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        - cluster.name=docker-cluster
#      OPENSEARCH_JAVA_OPTS: "-Xms512m -Xmx512m"
#      DISCOVERY_TYPE: single-node
#      OPENSEARCH_USERNAME: admin
#      OPENSEARCH_PASSWORD: admin
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    networks:
      - sora-network

networks:
  sora-network:
    driver: bridge